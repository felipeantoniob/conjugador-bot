// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package db

import (
	"context"
)

const getVerbByInfinitiveMoodTense = `-- name: GetVerbByInfinitiveMoodTense :one
SELECT
    infinitive,
    mood,
    tense,
    verb_english,
    form_1s,
    form_2s,
    form_3s,
    form_1p,
    form_2p,
    form_3p
FROM verbs
WHERE infinitive = ? AND mood = ? AND tense = ?
`

type GetVerbByInfinitiveMoodTenseParams struct {
	Infinitive string
	Mood       string
	Tense      string
}

func (q *Queries) GetVerbByInfinitiveMoodTense(ctx context.Context, arg GetVerbByInfinitiveMoodTenseParams) (Verb, error) {
	row := q.db.QueryRowContext(ctx, getVerbByInfinitiveMoodTense, arg.Infinitive, arg.Mood, arg.Tense)
	var i Verb
	err := row.Scan(
		&i.Infinitive,
		&i.Mood,
		&i.Tense,
		&i.VerbEnglish,
		&i.Form1s,
		&i.Form2s,
		&i.Form3s,
		&i.Form1p,
		&i.Form2p,
		&i.Form3p,
	)
	return i, err
}
